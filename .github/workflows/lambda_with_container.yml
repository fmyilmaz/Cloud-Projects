name: 'Deploy Lambda Function with Container Image'

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'AWS/lambda_with_container/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Build, tag, and push Docker image to Amazon ECR
      run: |
        cd AWS/lambda_with_container
        docker build -t my-lambda-function -f Dockerfile .
        docker tag my-lambda-function:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/my-lambda-function:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/my-lambda-function:latest

    - name: Deploy Lambda function
      run: |
        aws lambda update-function-code --function-name container_lambda \
          --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/my-lambda-function:latest --region ${{ secrets.AWS_DEFAULT_REGION }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
